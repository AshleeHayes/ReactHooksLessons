{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ahayes036\\\\Documents\\\\Practice\\\\ReactHooks\\\\useEffect\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ahayes036\\\\documents\\\\practice\\\\reacthooks\\\\useeffect\\\\src\\\\Playground.js\";\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport randomColor from 'randomcolor'; //everytime we update count, lets change th color of something\n\nexport default function Playground() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        color = _useState4[0],\n        setColor = _useState4[1];\n\n  useEffect(() => {\n    setColor(randomColor());\n  });\n  return React.createElement(\"div\", {\n    style: {\n      borderTop: '10px solid ${color}'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, count, React.createElement(\"button\", {\n    onClick: () => setCount(currentCount => currentCount - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"-\"), React.createElement(\"button\", {\n    onClick: () => setCount(currentCount => currentCount + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"+\"));\n} // https://cdb.reacttraining.com/react-inline-functions-and-performance-bdff784f5578\n//performance issues of inline functions","map":{"version":3,"sources":["C:/Users/ahayes036/documents/practice/reacthooks/useeffect/src/Playground.js"],"names":["React","useState","useEffect","useRef","useCallback","useMemo","randomColor","Playground","count","setCount","color","setColor","borderTop","currentCount"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,WAA7C,EAA0DC,OAA1D,QAAyE,OAAzE;AACA,OAAOC,WAAP,MAAwB,aAAxB,C,CAEA;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA,oBAEVN,QAAQ,CAAC,CAAD,CAFE;AAAA;AAAA,QAE7BO,KAF6B;AAAA,QAEtBC,QAFsB;;AAAA,qBAIVR,QAAQ,CAAC,IAAD,CAJE;AAAA;AAAA,QAI7BS,KAJ6B;AAAA,QAItBC,QAJsB;;AAKpCT,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACD,GAFQ,CAAT;AAIA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KADH,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACI,YAAY,IAAIA,YAAY,GAAG,CAAhC,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACI,YAAY,IAAIA,YAAY,GAAG,CAAhC,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CADF;AAQA,C,CAED;AACA","sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react'\r\nimport randomColor from 'randomcolor'\r\n\r\n//everytime we update count, lets change th color of something\r\n\r\nexport default function Playground() {\r\n\r\n const [count, setCount] = useState(0)\r\n\r\n const [color, setColor] = useState(null)\r\n useEffect(() => {\r\n   setColor(randomColor())\r\n })\r\n\r\n return (\r\n   <div style={{ borderTop: '10px solid ${color}' }}>\r\n     {count}\r\n     <button onClick={() => setCount(currentCount => currentCount - 1)}>-</button>\r\n     <button onClick={() => setCount(currentCount => currentCount + 1)}>+</button>\r\n   </div>\r\n )\r\n  \r\n}\r\n\r\n// https://cdb.reacttraining.com/react-inline-functions-and-performance-bdff784f5578\r\n//performance issues of inline functions"]},"metadata":{},"sourceType":"module"}